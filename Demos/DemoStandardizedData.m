%	OVERVIEW:
%       Demo of HRV Toolbox Analysis on Standardized Data generated by
%       RRGEN
%   INPUT:
%       No input necessary. RRGEN data is generated within this script
%   OUTPUT:
%       HRV Metrics
%   DEPENDENCIES & LIBRARIES:
%       HRV_toolbox https://github.com/cliffordlab/hrv_toolbox
%       WFDB Matlab toolbox https://github.com/ikarosilva/wfdb-app-toolbox
%       WFDB Toolbox https://physionet.org/physiotools/wfdb.shtml
%   REFERENCE: 
%	REPO:       
%       https://github.com/cliffordlab/hrv_toolbox
%   ORIGINAL SOURCE AND AUTHORS:     
%       Main script written by Adriana N. Vest
%       Dependent scripts written by various authors 
%       (see functions for details)       
%	COPYRIGHT (C) 2017
%   LICENSE:    
%       This software is offered freely and without warranty under 
%       the GNU (v3 or later) public license. See license file for
%       more information
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear all; clc; close all;
HRVparams = InitializeHRVparams('demo'); % include the project name

HRVparams.writedata = [HRVparams.writedata filesep 'RRgenData'];
if ~exist(HRVparams.writedata, 'dir')
   mkdir(HRVparams.writedata)
end
addpath(HRVparams.writedata)


%% 1. Generate Data

rr = rrgen(HRVparams.demo.length,HRVparams.demo.pe,HRVparams.demo.pn,HRVparams.demo.seed);
t = cumsum(rr);

%% 2. Preprocess RR Data - Using HRV Toolbox
% Remove noise, Remove ectopy, Don't detrend (yet)
[NN, tNN, fbeats] = RRIntervalPreprocess(rr,t,[], [], HRVparams);

%% 3. Calculate Windows
windows_all = CreateWindowRRintervals(tNN, NN, HRVparams);


%% 4. Calculate time domain HRV metrics - Using HRV Toolbox
[NNmean,NNmedian,NNmode,NNvariance,NNskew,NNkurt, SDNN, NNiqr, ...
    RMSSD,pnn50,btsdet,avgsqi,fbeatw, windows_all] = ...
    EvalTimeDomainHRVstats(NN,tNN,[],HRVparams,windows_all,fbeats);

%% 6. Frequency domain HRV metrics (LF HF TotPow)
%       All Inputs in Seconds
%%% TO DO: Remove necessity of creating phantom beats with lomb 
%%% TO DO: Only should return these metrics for 5 min segments

[ulf, vlf, lf, hf, lfhf, ttlpwr, methods, fdflag, window] = ...
   EvalFrequencyDomainHRVstats(NN,tNN, [],HRVparams,windows_all);

%% 7. PRSA
try
    [ac,dc,~] = prsa(NN, tNN, [], windows_all, HRVparams);
catch
    ac = NaN;
    dc = NaN;
    error_flag(i_patient) = subjectids(i_patient);
end

%% 8. SDANN and SDNNi
[SDANN, SDNNI] = ClalcSDANN(windows_all, tNN, NN(:),HRVparams);

%% 10. Save Results
% Uncomment the following lines for All Results
results = [windows_all(:),ac(:),dc(:),...
    ulf(:),vlf(:),lf(:),hf(:),lfhf(:),ttlpwr(:),fdflag(:),...
    NNmean(:),NNmedian(:),NNmode(:),...
    NNvariance(:),NNskew(:),NNkurt(:),SDNN(:),NNiqr(:),RMSSD(:),...
    pnn50(:),btsdet(:),fbeatw(:)];

col_titles = {'t_win','ac','dc','ulf','vlf','lf','hf','lfhf',...
    'ttlpwr','fdflag','NNmean','NNmedian','NNmode','NNvar','NNskew',...
    'NNkurt','SDNN','NNiqr','RMSSD','pnn50','beatsdetected','corrected_beats'};

% results = [NNmean(:), NNmedian(:)];
% col_titles = {'NN Mean','NNmedian'};

% Generates Output - Never comment out
resFilename = GenerateHRVresultsOutput('demo',windows_all,results,col_titles, [],HRVparams, tNN, NN);


fprintf('A file named %s.%s \n has been saved in %s \n', ...
    resFilename,HRVparams.output.format, HRVparams.writedata);

disp('RRGEN demo completed!')
